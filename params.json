{"name":"Ringring","tagline":"A markdown editor and some editor enent handlers.","body":"ringring\r\n========\r\n\r\nauthor: tulayang<br />\r\nemail: itulayangi@gmail.com iwangtongi@163.com\r\n\r\nMarkdown语法正在改变现在的网络文本编辑方式,博客,论坛,社区都在使用Markdown来作为首先编辑器. 然而对于Markdown语法不熟悉的编辑器使用者,需要为他们提供一些UI,辅助他们进入Markdown的文笔世界.\r\n\r\nringring帮助开发者提供文本捕捉方法,对于常用的标题格式化,引用格式化,插入代码,插入下划线...提供了现成的解决方案.\r\n\r\nringring依赖CodeMirror模块.\r\n\r\n另外,如果你想编写可视化代码高亮好用的markdown编辑器,还需要借助其他几个模块.\r\n\r\n * [CodeMirror](https://github.com/tulayang/CodeMirror)  \r\n   Ringring依赖的主要模块,提供编辑器基础编辑功能\r\n * [marked](https://github.com/chjj/marked)  \r\n   html解析器模块,解析编辑器的文本字符串,生成HTML字符串\r\n * [highlight](https://github.com/isagalaev/highlight.js)  \r\n   html代码高亮模块,程序员用户的福音\r\n * [font-awesome](https:http://fontawesome.io)  \r\n   twitter出品的文字图标,简单的配置,就能获得众多的按钮图标,而只有非常低的流量消耗\r\n\r\n\r\nDemo\r\n====\r\n\r\n**demo/**提供了一个演示版的markdown编辑器. 跟上次写的amarkdown编辑器不同,这次的demo版本只提供了基础的css方案,但是所有的内部功能都做了开放.\r\n\r\n通过ringring提供的API,和自定义的css,可以编写更个性化的markdown编辑器.\r\n\r\n如果你打算借助**ringring**写一个markdown编辑器,请一定参考**demo/index.html**.\r\n\r\n\r\nAPI\r\n===\r\n\r\nEvent Handlers\r\n--------------\r\n\r\n提供了多个DOM元素交互的事件处理器，帮助开发者处理Markdown编辑器的文本格式化．\r\n\r\n**onhead(cm, cmdoc)**\r\n\r\n'abc' => '# abc'\r\n\r\n捕捉当前编辑器的选择文本(包括ctrl选择的多项选区),　格式化为标题文本．\r\n\r\n示例：\r\n\r\n```\r\n// HTML页面，设定文本输入框textarea，和触发按钮\r\n// 触发按钮可以是任意的HTML元素\r\n<textarea id=\"textarea\"></textarea>\r\n<button id=\"btn-head\"></button>\r\n```\r\n\r\n```\r\n// 调用CodeMirror，格式化文本输入框，使其变为CodeMirror编辑器\r\n// 这个过程只需要运行一次，请确保cm, cmdoc能够保持在需要的作用域环境，以便于引用\r\nvar cm = CodeMirror.fromTextArea(document.getElementById('textarea'), { lineWrapping : true });\r\nvar cmdoc = cm.getDoc();\r\n// 为触发元素添加事件处理器\r\nvar btn = document.getElementById('btn-head');\r\nbtn.addEventListener('click', RingringRingring.onhead(cm, cmdoc), false);\r\n```\r\n\r\n**onlistitem(cm, cmdoc)**\r\n\r\n'abc' => '- abc'\r\n\r\n捕捉当前编辑器的选择文本(包括ctrl选择的多项选区),　格式化为列表项．\r\n\r\n示例：\r\n\r\n```\r\n<button id=\"btn-listitem\"></button>\r\n```\r\n\r\n```\r\nvar btn = document.getElementById('btn-listitem');\r\nbtn.addEventListener('click', Ringring.onlistitem(cm, cmdoc), false);\r\n```\r\n\r\n**onempha(cm, cmdoc)**\r\n\r\n'abc' => '*abc*'\r\n\r\n捕捉当前编辑器的选择文本(包括ctrl选择的多项选区),　格式化为强调文本．\r\n\r\n示例：\r\n\r\n```\r\n<button id=\"btn-empha\"></button>\r\n```\r\n\r\n```\r\nvar btn = document.getElementById('btn-empha');\r\nbtn.addEventListener('click', Ringring.onempha(cm, cmdoc), false);\r\n```\r\n\r\n**onblockquote(cm, cmdoc)**\r\n\r\n'abc' => '> abc'\r\n\r\n捕捉当前编辑器的选择文本(包括ctrl选择的多项选区),　格式化为引用文本．\r\n\r\n示例：\r\n\r\n```\r\n<button id=\"btn-blockquote\"></button>\r\n```\r\n\r\n```\r\nvar btn = document.getElementById('btn-blockquote');\r\nbtn.addEventListener('click', Ringring.onblockquote(cm, cmdoc), false);\r\n```\r\n\r\n**oncode(cm, cmdoc)**\r\n\r\n'abc' => '```\\nabc\\n```'\r\n\r\n捕捉当前编辑器的选择文本(包括ctrl选择的多项选区),　格式化为代码文本．\r\n\r\n示例：\r\n\r\n```\r\n<button id=\"btn-code\"></button>\r\n```\r\n\r\n```\r\nvar btn = document.getElementById('btn-code');\r\nbtn.addEventListener('click', Ringring.oncode(cm, cmdoc), false);\r\n```\r\n\r\n**online(cm, cmdoc)**\r\n\r\n'abc' => '----------'\r\n\r\n捕捉当前编辑器的选择文本(包括ctrl选择的多项选区),　格式化为水平线．\r\n\r\n示例：\r\n\r\n```\r\n<button id=\"btn-line\"></button>\r\n```\r\n\r\n```\r\nvar btn = document.getElementById('btn-line');\r\nbtn.addEventListener('click', Ringring.online(cm, cmdoc), false);\r\n```\r\n\r\n**onblock(cm, cmdoc, format)**\r\n\r\n'abc' => '\\nUUUUUU\\n'\r\n\r\n捕捉当前编辑器的选择文本(包括ctrl选择的多项选区),　格式化为块文本．\r\n块文本在内容前后会有换行符．\r\n\r\n示例：\r\n\r\n```\r\n<button id=\"btn-custom\"></button>\r\n```\r\n\r\n```\r\nvar btn = document.getElementById('btn-custom');\r\nbtn.addEventListener('click', Ringring.onblock(cm, cmdoc, function () {\r\n    return 'UUUUUU';\r\n}), false);\r\n```\r\n\r\n**oninner(cm, cmdoc, format)**\r\n\r\n'abc' => 'UUUUUU'\r\n\r\n捕捉当前编辑器的选择文本(包括ctrl选择的多项选区),　格式化为内联文本．\r\n这个事件处理器,可以用于处理插入超级链接,插入图片路径.\r\n\r\n示例：\r\n\r\n\r\n```\r\n<button id=\"btn-custom\"></button>\r\n```\r\n\r\n```\r\nvar btn = document.getElementById('btn-custom');\r\nbtn.addEventListener('click', Ringring.oninner(cm, cmdoc, function () {\r\n    return 'UUUUUU';\r\n}), false);\r\n```\r\n\r\nMethods\r\n=======\r\n\r\n事件处理器的方法方式．\r\n当需要对同一个事件，进行特殊的操作时，可以使用这些方法．\r\n每一个方法对应Events提供的事件处理器．\r\n\r\n**head(cm, cmdoc)**\r\n\r\n```\r\nbtn.addEventListener('click', function () {\r\n    // do something\r\n    Ringring.head(cm, cmdoc);\r\n    // do something\r\n}, false);\r\n```\r\n\r\n**listitem(cm, cmdoc)**\r\n\r\n```\r\nbtn.addEventListener('click', function () {\r\n    Ringring.listitem(cm, cmdoc);\r\n}, false);\r\n```\r\n\r\n**empha(cm, cmdoc)**\r\n\r\n```\r\nbtn.addEventListener('click', function () {\r\n    Ringring.empha(cm, cmdoc);\r\n}, false);\r\n```\r\n\r\n**blockquote(cm, cmdoc)**\r\n\r\n```\r\nbtn.addEventListener('click', function () {\r\n    Ringring.blockquote(cm, cmdoc);\r\n}, false);\r\n```\r\n\r\n**code(cm, cmdoc)**\r\n\r\n```\r\nbtn.addEventListener('click', function () {\r\n    Ringring.code(cm, cmdoc);\r\n}, false);\r\n```\r\n\r\n**line(cm, cmdoc)**\r\n\r\n```\r\nbtn.addEventListener('click', function () {\r\n    Ringring.line(cm, cmdoc);\r\n}, false);\r\n```\r\n\r\n**block(cm, cmdoc, format)**\r\n\r\n```\r\nbtn.addEventListener('click', function () {\r\n    Ringring.block(cm, cmdoc, function () { return 'UUUUUU'; });\r\n}, false);\r\n```\r\n\r\n**inner(cm, cmdoc, format)**\r\n\r\n```\r\nbtn.addEventListener('click', function () {\r\n    Ringring.inner(cm, cmdoc, function () { return 'UUUUUU'; });\r\n}, false);\r\n```\r\n\r\nWidgets\r\n-------\r\n\r\n提供了一些富组件,用来处理复杂的DOM交互．\r\n\r\n**uploader(config, callback)**\r\n\r\n图片上传组件,提供iframe方式的上传.\r\n支持度: IE9+, Firefox, Chrome, Opera, Safari\r\n\r\n示例:\r\n\r\n```\r\n<style>\r\n#uploader {\r\n    position:relative;\r\n    width:602px;\r\n    height:202px;\r\n}\r\n#open {\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:602px;\r\n    height:202px;\r\n}\r\n#displayer {\r\n    border: 1px solid rgb(245,245,245);\r\n    width:600px;\r\n    height:200px;\r\n}\r\n#loading {\r\n    position:absolute;\r\n    top:50%;\r\n    left:50%;\r\n    margin-top:-30px;\r\n    margin-left:-60px;\r\n}\r\n#form {\r\n    display:none;\r\n}\r\n</style>\r\n\r\n<!--\r\n    HTML页面设定上传元素,至少包括:\r\n       open                   : 打开元素,打开文件夹\r\n       displayer              : 显示图片的iframe框架\r\n       form[target=displayer] : 上传图片的表单\r\n       input[type=file]       : 上传图片的文件元素\r\n-->\r\n<div id=\"uploader\">\r\n    <div id=\"open\"></div>\r\n    <img id=\"loading\" src=\"loading.gif\" alt=\"loading\"/>\r\n    <iframe id=\"displayer\" name=\"displayer\" scrolling=\"no\"></iframe>\r\n    <form id=\"form\" action=\"a.jpg\" method=\"post\" target=\"displayer\">\r\n        <input type=\"file\" id=\"file\" name=\"file\"/>\r\n    </form>\r\n</div>\r\n<input type=\"text\" id=\"url\" name=\"url\"/>\r\n\r\n<script>\r\nRingring.uploader({\r\n    elemIframe: document.getElementById('displayer'),\r\n    elemLoading: document.getElementById('loading'),\r\n    elemForm: document.getElementById('form'),\r\n    elemFile: document.getElementById('file'),\r\n    elemOpen: document.getElementById('open')\r\n}, function (src) { \r\n    // 当上传完毕后,服务器传回图片信息,\r\n    // 这个回调函数可以处理传回图片路径\r\n    document.getElementById('url').value = src;\r\n});\r\n</script>\r\n```\r\n\r\n**closer(config)**\r\n\r\n关联打开元素,关闭元素,框体,形成一个可以打开关闭的弹出框.\r\n\r\n示例:\r\n\r\n```\r\n<style>\r\n#container {\r\n    display:none;\r\n    position:absolute;\r\n    background:rgb(245,245,245);\r\n    top:100px;\r\n    left:100px;\r\n    width:200px;\r\n    height:100px;\r\n}\r\n</style>\r\n\r\n<button id=\"opener\">open</button>\r\n<button id=\"closer\">close</button>\r\n<div id=\"container\">text</div>\r\n\r\n<script>\r\nRingring.closer({\r\n    elemOpen: document.getElementById('opener'),\r\n    elemClose: document.getElementById('closer'),\r\n    elemContainer: document.getElementById('container'),\r\n    touch: true // 如果为true,当点击窗口非选择区域时,也会关闭框体\r\n});\r\n</script> \r\n```\r\n\r\nExample\r\n=======\r\n\r\n一个成形的Markdown编辑器示例:\r\n\r\n```\r\n<!Doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"utf-8\"/>\r\n    <title>a make down editor</title>\r\n\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"font-awesome-4.2.0/css/font-awesome.min.css\"/>\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"codemirror/lib/codemirror.css\"/>\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"highlight/styles/xcode.css\"/>\r\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"ringring.css\"/>\r\n\r\n    <script src=\"codemirror/lib/codemirror.js\"></script>\r\n    <script src=\"codemirror/mode/markdown/markdown.js\"></script>\r\n    <script src=\"marked/lib/marked.js\"></script>\r\n    <script src=\"highlight/highlight.pack.js\"></script>\r\n    <script src=\"ringring.js\"></script>\r\n</head>\r\n<body>\r\n    <div class=\"rr\">\r\n        <div class=\"rr-container\">\r\n            <div class=\"rr-col\">\r\n                <menu class=\"rr-menu\">\r\n                    <li class=\"rr-head\"><i class=\"fa fa-text-height\"></i></li>\r\n                    <li class=\"rr-listitem\"><i class=\"fa fa-list\"></i></li>\r\n                    <li class=\"rr-empha\"><i class=\"fa fa-italic\"></i></li>\r\n                    <li class=\"rr-blockquote\"><i class=\"fa fa-indent\"></i></li>\r\n                    <li class=\"rr-code\"><i class=\"fa fa-code\"></i></li>\r\n                    <li class=\"rr-line\"><i class=\"fa fa-ellipsis-h\"></i></li>\r\n                </menu>\r\n                <div class=\"rr-input\">\r\n                    <input type=\"text\" name=\"title\" placeholder=\"...\"/>\r\n                </div> \r\n                <textarea class=\"rr-text\"></textarea>\r\n            </div>\r\n            <div class=\"rr-col\">\r\n                <div class=\"rr-preview\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <script> \r\n    (function (Ringring, CodeMirror, marked, hljs) {\r\n        var rr = document.querySelector('.rr'),\r\n            rrText       = rr.querySelector('.rr-text'),\r\n            rrPreview    = rr.querySelector('.rr-preview'),\r\n            rrHead       = rr.querySelector('.rr-head'),\r\n            rrListitem   = rr.querySelector('.rr-listitem'),\r\n            rrEmpha      = rr.querySelector('.rr-empha'),\r\n            rrBlockquote = rr.querySelector('.rr-blockquote'),\r\n            rrCode       = rr.querySelector('.rr-code'),\r\n            rrLine       = rr.querySelector('.rr-line');\r\n\r\n            // 初始化编辑器,详情请参看CodeMirror模块说明文档\r\n            cm = CodeMirror.fromTextArea(rrText, {\r\n                lineWrapping: true,\r\n                lineNumbers: true\r\n            }),\r\n            cmdoc = cm.getDoc();\r\n\r\n        // 设置marked模块配置,详情请参看marked模块说明文档\r\n        marked.setOptions({\r\n            highlight: function (code) {\r\n                return hljs.highlightAuto(code).value;\r\n            },\r\n            breaks: true,\r\n            sanitize: false\r\n        });\r\n\r\n        // 当编辑器文本内容变化时,在预览视图解析为HTML内容\r\n        cm.on('change', function (cm, change) {\r\n            // cmdoc.getValue() : 编辑器文本字符串\r\n            marked(cmdoc.getValue(), function (err, content) {\r\n                // content : 解析后的HTML文本字符串\r\n                rrPreview.innerHTML = content;\r\n            });\r\n        });\r\n\r\n        // 注册编辑器事件\r\n        // 标准的DOM事件\r\n        // jQuery方式: \r\n        //     $('.rr .rr-head').on('click', Ringring.onhead(cm, cmdoc));\r\n        rrHead.addEventListener('click', Ringring.onhead(cm, cmdoc), false);\r\n        rrListitem.addEventListener('click', Ringring.onlistitem(cm, cmdoc), false);\r\n        rrEmpha.addEventListener('click', Ringring.onempha(cm, cmdoc), false);\r\n        rrBlockquote.addEventListener('click', Ringring.onblockquote(cm, cmdoc), false);\r\n        rrCode.addEventListener('click', Ringring.oncode(cm, cmdoc), false);\r\n        rrLine.addEventListener('click', Ringring.online(cm, cmdoc), false);\r\n    }(Ringring, CodeMirror, marked, hljs));\r\n    </script>\r\n</body>\r\n</html>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}